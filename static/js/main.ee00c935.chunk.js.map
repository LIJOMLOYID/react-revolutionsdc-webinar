{"version":3,"sources":["components/SideNav/SideNav.js","components/About/About.js","components/ProjectCard/ProjectCard.js","components/Projects/Projects.js","components/SkillCard/SkillCard.js","components/Skills/Skills.js","components/ExperienceCard/ExperienceCard.js","components/Experiences/Experiences.js","components/SectionContainer/SectionContainer.js","components/Portfolio/Portfolio.js","constants/About.js","constants/Experiences.js","constants/Projects.js","constants/Skills.js","components/App.js","serviceWorker.js","index.js"],"names":["SideNav","handleSectionClick","className","src","alt","onClick","About","about","bio","ProjectCard","project","name","description","href","link","Projects","projects","projectList","map","SkillCard","skill","Skills","skills","techSkills","industryKnowledge","interpersonalSkills","ExperienceCard","experience","companyName","role","Experiences","experiences","experienceList","SectionContainer","selectedSection","selectedHeading","selectedQuote","Portfolio","heading","quote","App","useState","state","setState","sectionName","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"idAIaA,G,kBAAU,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,mBACxB,OACE,yBAAKC,UAAU,WACb,yBACEC,IAAI,mDACJD,UAAU,SACVE,IAAI,WAEN,wBAAIF,UAAU,aAAd,gBACA,uBAAGA,UAAU,YAAb,qBACA,yBAAKA,UAAU,iBACb,uBACEA,UAAU,uBACVG,QAAS,kBAAMJ,EAAmB,WAFpC,YAMA,uBACEC,UAAU,uBACVG,QAAS,kBAAMJ,EAAmB,YAFpC,UAMA,uBACEC,UAAU,uBACVG,QAAS,kBAAMJ,EAAmB,cAFpC,YAMA,uBACEC,UAAU,uBACVG,QAAS,kBAAMJ,EAAmB,iBAFpC,mBC7BKK,G,YAAQ,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACtB,OACE,yBAAKL,UAAU,mBACb,2BAAIK,EAAMC,QCHHC,G,YAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC5B,OACE,yBAAKR,UAAU,gBACb,2BACE,oCADF,IACgBQ,EAAQC,MAExB,6BACA,2BACE,2CADF,IACuBD,EAAQE,aAE/B,6BACA,2BACE,oCADF,IACe,uBAAGC,KAAMH,EAAQI,MAAOJ,EAAQI,MAAU,QCXlDC,EAAW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzB,OACE,yBAAKd,UAAU,sBACb,yBAAKA,UAAU,4BACZc,EAASC,YAAYC,KAAI,SAACR,GAAD,OACxB,kBAAC,EAAD,CAAaA,QAASA,UCNnBS,G,MAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1B,OACE,yBAAKlB,UAAU,cACb,2BAAIkB,MCHGC,G,MAAS,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACvB,OACE,yBAAKpB,UAAU,oBACb,2CACA,yBAAKA,UAAU,4BACZoB,EAAOC,WAAWL,KAAI,SAACE,GAAD,OACrB,kBAAC,EAAD,CAAWA,MAAOA,QAGtB,kDACA,yBAAKlB,UAAU,4BACZoB,EAAOE,kBAAkBN,KAAI,SAACE,GAAD,OAC5B,kBAAC,EAAD,CAAWA,MAAOA,QAGtB,oDACA,yBAAKlB,UAAU,4BACZoB,EAAOG,oBAAoBP,KAAI,SAACE,GAAD,OAC9B,kBAAC,EAAD,CAAWA,MAAOA,WClBfM,G,YAAiB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAC/B,OACE,yBAAKzB,UAAU,mBACb,2BACE,4CADF,IACwByB,EAAWC,aAEnC,6BACA,2BACE,oCADF,IACgBD,EAAWE,MAE3B,6BACA,2BACE,qCADF,IACiBF,EAAWpB,UCXrBuB,EAAc,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAC5B,OACE,yBAAK7B,UAAU,yBACb,yBAAKA,UAAU,4BACZ6B,EAAYC,eAAed,KAAI,SAACS,GAAD,OAC9B,kBAAC,EAAD,CAAgBA,WAAYA,UCFzBM,EAAmB,SAAC,GAQ1B,IAPLC,EAOI,EAPJA,gBACAC,EAMI,EANJA,gBACAC,EAKI,EALJA,cACA7B,EAII,EAJJA,MACAS,EAGI,EAHJA,SACAM,EAEI,EAFJA,OACAS,EACI,EADJA,YAEA,OACE,yBAAK7B,UAAU,qBACb,yBAAKA,UAAU,6BACb,wBAAIA,UAAU,gBAAgBiC,GAC9B,uBAAGjC,UAAU,cAAckC,IAE7B,yBAAKlC,UAAU,qBAEX,CACEK,MAAO,kBAAC,EAAD,CAAOA,MAAOA,IACrBe,OAAQ,kBAAC,EAAD,CAAQA,OAAQA,IACxBN,SAAU,kBAAC,EAAD,CAAUA,SAAUA,IAC9Be,YAAa,kBAAC,EAAD,CAAaA,YAAaA,KACvCG,MCMGG,EA9BG,SAAC,GASZ,IARLH,EAQI,EARJA,gBACAC,EAOI,EAPJA,gBACAC,EAMI,EANJA,cACAnC,EAKI,EALJA,mBACAM,EAII,EAJJA,MACAS,EAGI,EAHJA,SACAM,EAEI,EAFJA,OACAS,EACI,EADJA,YAEA,OACE,yBAAK7B,UAAU,uBACb,yBAAKA,UAAU,qBACb,kBAAC,EAAD,CAASD,mBAAoBA,KAE/B,yBAAKC,UAAU,0BACb,kBAAC,EAAD,CACEgC,gBAAiBA,EACjBC,gBAAiBA,EACjBC,cAAeA,EACf7B,MAAOA,EACPS,SAAUA,EACVM,OAAQA,EACRS,YAAaA,OC7BVxB,EAAQ,CACnB+B,QAAS,WACTC,MAAO,gCACP/B,IACE,6jBCJSuB,EAAc,CACzBO,QAAS,cACTC,MACE,4EACFP,eAAgB,CACd,CACEJ,YAAa,YACbC,KAAM,qBACNtB,MACE,qTCTKS,EAAW,CACtBsB,QAAS,WACTC,MAAO,gEACPtB,YAAa,CACX,CACEN,KAAM,mBACNC,YACE,+GACFE,KAAM,kDAER,CACEH,KAAM,iBACNC,YAAa,6CACbE,KAAM,+CAER,CACEH,KAAM,wBACNC,YAAa,qDACbE,KAAM,uDAER,CACEH,KAAM,gBACNC,YACE,4MACFE,KAAM,+CAER,CACEH,KAAM,uBACNC,YAAa,uBACbE,KAAM,0DAER,CACEH,KAAM,iCACNC,YAAa,4DACbE,KAAM,gEAER,CACEH,KAAM,QACNC,YAAa,0DACbE,KAAM,uCAER,CACEH,KAAM,YACNC,YACE,6NACFE,KAAM,2CAER,CACEH,KAAM,mBACNC,YAAa,mBACbE,KAAM,yDClDCQ,EAAS,CACpBgB,QAAS,SACTC,MAAO,qCACPhB,WAAY,CACV,OACA,mBACA,cACA,uBACA,YACA,MACA,gBACA,MACA,uBACA,aACA,SACA,UACA,QACA,OACA,MACA,YACA,kBACA,MACA,SACA,UACA,WAEFC,kBAAmB,CACjB,uBACA,wBACA,gBACA,yCACA,kBACA,UACA,mBAEFC,oBAAqB,CACnB,gBACA,aACA,aACA,kBACA,WACA,cCiBWe,EAhDH,WAAO,IAAD,EACUC,mBAAS,CACjCP,gBAAiB,QACjBC,gBAAiB5B,EAAM+B,QACvBF,cAAe7B,EAAMgC,MACrBhC,MAAOA,EACPS,SAAUA,EACVM,OAAQA,EACRS,YAAaA,IARC,mBACTW,EADS,KACFC,EADE,KAgChB,OACE,yBAAKzC,UAAU,OACb,kBAAC,EAAD,CACEgC,gBAAiBQ,EAAMR,gBACvBC,gBAAiBO,EAAMP,gBACvBC,cAAeM,EAAMN,cACrBnC,mBAfqB,SAAC2C,GAC1BD,EAAS,2BACJD,GADG,IAENR,gBAAiBU,EACjBT,gBAAiBO,EAAME,GAAaN,QACpCF,cAAeM,EAAME,GAAaL,UAWhChC,MAAOmC,EAAMnC,MACbe,OAAQoB,EAAMpB,OACdN,SAAU0B,EAAM1B,SAChBe,YAAaW,EAAMX,gBCxCPc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.ee00c935.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./sidenav.css\";\n\nexport const SideNav = ({ handleSectionClick }) => {\n  return (\n    <div className=\"sidenav\">\n      <img\n        src=\"https://avatars2.githubusercontent.com/u/2143962\"\n        className=\"avatar\"\n        alt=\"avatar\"\n      />\n      <h2 className=\"main-name\">Lijo M Loyid</h2>\n      <p className=\"subtitle\">\"Technology buff\"</p>\n      <div className=\"sections-list\">\n        <p\n          className=\"section-list-element\"\n          onClick={() => handleSectionClick(\"about\")}\n        >\n          About Me\n        </p>\n        <p\n          className=\"section-list-element\"\n          onClick={() => handleSectionClick(\"skills\")}\n        >\n          Skills\n        </p>\n        <p\n          className=\"section-list-element\"\n          onClick={() => handleSectionClick(\"projects\")}\n        >\n          Projects\n        </p>\n        <p\n          className=\"section-list-element\"\n          onClick={() => handleSectionClick(\"experiences\")}\n        >\n          Experiences\n        </p>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport \"./about.css\";\n\nexport const About = ({ about }) => {\n  return (\n    <div className=\"about-container\">\n      <p>{about.bio}</p>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport \"./project-card.css\";\n\nexport const ProjectCard = ({ project }) => {\n  return (\n    <div className=\"project-card\">\n      <p>\n        <b>Name:</b> {project.name}\n      </p>\n      <br />\n      <p>\n        <b>Description:</b> {project.description}\n      </p>\n      <br />\n      <p>\n        <b>Link:</b> <a href={project.link}>{project.link}</a>{\" \"}\n      </p>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport \"./projects.css\";\nimport { ProjectCard } from \"../ProjectCard/ProjectCard\";\n\nexport const Projects = ({ projects }) => {\n  return (\n    <div className=\"projects-container\">\n      <div className=\"industry-skill-container\">\n        {projects.projectList.map((project) => (\n          <ProjectCard project={project} />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport \"./skill-card.css\";\n\nexport const SkillCard = ({ skill }) => {\n  return (\n    <div className=\"skill-card\">\n      <p>{skill}</p>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { SkillCard } from \"../SkillCard/SkillCard\";\nimport \"./skills.css\";\n\nexport const Skills = ({ skills }) => {\n  return (\n    <div className=\"skills-container\">\n      <h3>Tech Skills</h3>\n      <div className=\"industry-skill-container\">\n        {skills.techSkills.map((skill) => (\n          <SkillCard skill={skill} />\n        ))}\n      </div>\n      <h3>Industry Knowledge</h3>\n      <div className=\"industry-skill-container\">\n        {skills.industryKnowledge.map((skill) => (\n          <SkillCard skill={skill} />\n        ))}\n      </div>\n      <h3>Interpersonal Skills</h3>\n      <div className=\"industry-skill-container\">\n        {skills.interpersonalSkills.map((skill) => (\n          <SkillCard skill={skill} />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\r\n\r\nimport \"./experience-card.css\";\r\n\r\nexport const ExperienceCard = ({ experience }) => {\r\n  return (\r\n    <div className=\"experience-card\">\r\n      <p>\r\n        <b>Company name:</b> {experience.companyName}\r\n      </p>\r\n      <br />\r\n      <p>\r\n        <b>Role:</b> {experience.role}\r\n      </p>\r\n      <br />\r\n      <p>\r\n        <b>About:</b> {experience.about}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./experiences.css\";\r\nimport { ExperienceCard } from \"../ExperienceCard/ExperienceCard\";\r\n\r\nexport const Experiences = ({ experiences }) => {\r\n  return (\r\n    <div className=\"experiences-container\">\r\n      <div className=\"industry-skill-container\">\r\n        {experiences.experienceList.map((experience) => (\r\n          <ExperienceCard experience={experience} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\n\nimport \"./section-container.css\";\nimport { About } from \"../About/About\";\nimport { Projects } from \"../Projects/Projects\";\nimport { Skills } from \"../Skills/Skills\";\nimport { Experiences } from \"../Experiences/Experiences\";\n\nexport const SectionContainer = ({\n  selectedSection,\n  selectedHeading,\n  selectedQuote,\n  about,\n  projects,\n  skills,\n  experiences,\n}) => {\n  return (\n    <div className=\"section-container\">\n      <div className=\"section-heading-container\">\n        <h1 className=\"main-heading\">{selectedHeading}</h1>\n        <p className=\"main-quote\">{selectedQuote}</p>\n      </div>\n      <div className=\"section-component\">\n        {\n          {\n            about: <About about={about} />,\n            skills: <Skills skills={skills} />,\n            projects: <Projects projects={projects} />,\n            experiences: <Experiences experiences={experiences} />,\n          }[selectedSection]\n        }\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport \"./portfolio.css\";\nimport { SideNav } from \"../SideNav/SideNav\";\nimport { SectionContainer } from \"../SectionContainer/SectionContainer\";\n\nconst Portfolio = ({\n  selectedSection,\n  selectedHeading,\n  selectedQuote,\n  handleSectionClick,\n  about,\n  projects,\n  skills,\n  experiences,\n}) => {\n  return (\n    <div className=\"portfolio-container\">\n      <div className=\"sidenav-container\">\n        <SideNav handleSectionClick={handleSectionClick} />\n      </div>\n      <div className=\"main-section-container\">\n        <SectionContainer\n          selectedSection={selectedSection}\n          selectedHeading={selectedHeading}\n          selectedQuote={selectedQuote}\n          about={about}\n          projects={projects}\n          skills={skills}\n          experiences={experiences}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Portfolio;\n","export const about = {\n  heading: \"About Me\",\n  quote: \"Every pro was once an amateur\",\n  bio:\n    \"A Developer by passion. I'm a tech enthusiast, Java developer and a constant learner. \\n\\nFortunate enough to work on what I love. Software development is not just a day job for me, but a passion that I care about deeply. Currently working in ThinkPalm at Infopark, Kochi. Skilled in Java, Spring, Spring Boot, Hibernate etc. I have perseverance and a learning mindset. I'm willing to learn and ready to go the extra mile to reach my goal, above and beyond. I'm always learning and constantly striving to acquire new skills to improve myself as a software professional.\",\n};\n","export const experiences = {\n  heading: \"Experiences\",\n  quote:\n    \"Theory without practice is just as incomplete as practice without theory.\",\n  experienceList: [\n    {\n      companyName: \"ThinkPalm\",\n      role: \"Software Developer\",\n      about:\n        \"Product Engineering and Software Development company, equipped with a holistic approach and diverse industry expertise in IoT, Enterprise and Telecom sectors. Lijo is currently working as a Java developer at ThinkPalm with focus on building scalable enterprise software products and RESTful Web Services\",\n    },\n  ],\n};\n","export const projects = {\n  heading: \"Projects\",\n  quote: \"Ahh, Learning alone is boring, implementation is the real fun\",\n  projectList: [\n    {\n      name: \"Monsters Rolodex\",\n      description:\n        \"A React app which fetches Monster picture, name and email from a REST API endpoint and delivers it in the UI\",\n      link: \"https://lijomloyid.github.io/monsters-rolodex/\",\n    },\n    {\n      name: \"Crown Clothing\",\n      description: \"A fully fledged e-commerce web application\",\n      link: \"https://github.com/LIJOMLOYID/crwn-clothing\",\n    },\n    {\n      name: \"Ristorante Con Fusion\",\n      description: \"Web application for Fusion Restaurant in Hong Kong\",\n      link: \"https://github.com/LIJOMLOYID/Ristorante-Con-Fusion\",\n    },\n    {\n      name: \"Covid Tracker\",\n      description:\n        \"Java Spring Boot application to track reported data of confirmed Coronavirus infections COVID 19 (2019 nCoV) around the world. Data source used: Novel Coronavirus (COVID-19) Cases, provided by JHU CSSE\",\n      link: \"https://github.com/LIJOMLOYID/covid-tracker\",\n    },\n    {\n      name: \"Goodreads for movies\",\n      description: \"Goodreads for movies\",\n      link: \"https://github.com/LIJOMLOYID/goodreads-for-movies-API\",\n    },\n    {\n      name: \"Tesla battery range calculator\",\n      description: \"Building Tesla’s battery range calculator with React\",\n      link: \"https://github.com/LIJOMLOYID/tesla-battery-range-calculator\",\n    },\n    {\n      name: \"Vidly\",\n      description: \"Web application for over-the-top content platform vidly\",\n      link: \"https://github.com/LIJOMLOYID/vidly\",\n    },\n    {\n      name: \"Phonebook\",\n      description:\n        \"A project using Spring Boot for implementing a RESTful backend, and Angular for creating a JavaScript-based frontend. It fetches and displays a List of JPA entities from a database, and persists new ones through a form\",\n      link: \"https://github.com/LIJOMLOYID/phonebook\",\n    },\n    {\n      name: \"Breaking Bad API\",\n      description: \"Breaking Bad API\",\n      link: \"https://github.com/LIJOMLOYID/react-breakingbad-api\",\n    },\n  ],\n};\n","export const skills = {\n  heading: \"Skills\",\n  quote: \"Build your skills, not your resume\",\n  techSkills: [\n    \"Java\",\n    \"Spring Framework\",\n    \"Spring Boot\",\n    \"RESTful Web Services\",\n    \"Hibernate\",\n    \"JPA\",\n    \"Microservices\",\n    \"SQL\",\n    \"Relational Databases\",\n    \"JavaScript\",\n    \"NodeJS\",\n    \"ReactJS\",\n    \"Redux\",\n    \"HTML\",\n    \"CSS\",\n    \"Bootstrap\",\n    \"Material Design\",\n    \"Git\",\n    \"GitHub\",\n    \"MongoDB\",\n    \"Angular\",\n  ],\n  industryKnowledge: [\n    \"Software Development\",\n    \"Software Architecture\",\n    \"System Design\",\n    \"SDLC - Software Development Life cycle\",\n    \"Cloud Computing\",\n    \"Backend\",\n    \"Web Development\",\n  ],\n  interpersonalSkills: [\n    \"Communication\",\n    \"Management\",\n    \"Leadership\",\n    \"Time Management\",\n    \"Teaching\",\n    \"Mentoring\",\n  ],\n};\n","import React, { useState } from \"react\";\n\nimport \"./App.css\";\nimport Portfolio from \"./Portfolio/Portfolio\";\n\nimport { about } from \"../constants/About\";\nimport { experiences } from \"../constants/Experiences\";\nimport { projects } from \"../constants/Projects\";\nimport { skills } from \"../constants/Skills\";\n\nconst App = () => {\n  const [state, setState] = useState({\n    selectedSection: \"about\",\n    selectedHeading: about.heading,\n    selectedQuote: about.quote,\n    about: about,\n    projects: projects,\n    skills: skills,\n    experiences: experiences,\n  });\n\n  // constructor() {\n  //   super();\n  //   this.state = {\n  //     selectedSection: \"about\",\n  //     selectedHeading: about.heading,\n  //     selectedQuote: about.quote,\n  //     about: about,\n  //     projects: projects,\n  //     skills: skills,\n  //   };\n  // }\n\n  const handleSectionClick = (sectionName) => {\n    setState({\n      ...state,\n      selectedSection: sectionName,\n      selectedHeading: state[sectionName].heading,\n      selectedQuote: state[sectionName].quote,\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <Portfolio\n        selectedSection={state.selectedSection}\n        selectedHeading={state.selectedHeading}\n        selectedQuote={state.selectedQuote}\n        handleSectionClick={handleSectionClick}\n        about={state.about}\n        skills={state.skills}\n        projects={state.projects}\n        experiences={state.experiences}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}